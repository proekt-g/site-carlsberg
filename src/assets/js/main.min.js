"use strict";window.addEventListener("load",function(){var y,t,A;950<window.innerWidth&&(t=y=120,A=150),window.innerWidth<=950&&(y=100,t=90,A=130),window.innerWidth<=700&&(y=60,t=80),window.innerWidth<=414&&(y=55,t=45),$.fn.rotatingSlider=function(i){var t={init:function(t){this.$slider=$(t),this.$slidesContainer=this.$slider.children("ul.slides"),this.$slides=this.$slidesContainer.children("li"),this.$clipPath,this.$directionControls,this.settings=$.extend({autoRotate:!0,autoRotateInterval:6e3,draggable:!0,directionControls:!0,directionLeftText:"&lsaquo;",directionRightText:"&rsaquo;",rotationSpeed:750,slideHeight:360,slideWidth:480,meTopCoef:0,meInnerRadiusCoef:1.23,mePaddingCoef:1},i),this.slideAngle=360/this.$slides.length,this.currentRotationAngle=0,this.autoRotateIntervalId=!1,this.rotateTimoutId=!1,this.currentlyRotating=!1,this.readyToDrag=!1,this.dragStartPoint,this.dragStartAngle,this.currentlyDragging=!1,this.markupIsValid=!1,this.validateMarkup(),this.markupIsValid&&(this.renderSlider(),this.bindEvents(),this.settings.autoRotate&&this.startAutoRotate())},bindEvents:function(){this.settings.draggable&&(this.$slidesContainer.on("mousedown touchstart",this.handleDragStart.bind(this)),this.$slidesContainer.on("mousemove touchmove",this.handleDragMove.bind(this)),this.$slidesContainer.on("mouseup mouseleave touchend",this.handleDragEnd.bind(this))),this.settings.directionControls&&(this.$slider.find("ul.direction-controls .left-arrow button").click(this.handleLeftDirectionClick.bind(this)),this.$slider.find("ul.direction-controls .right-arrow button").click(this.handleRightDirectionClick.bind(this)))},handleDragStart:function(t){this.readyToDrag=!0,this.dragStartPoint="mousedown"===t.type?t.pageX:t.originalEvent.touches[0].pageX},handleDragMove:function(t){var i;this.readyToDrag&&(i="mousemove"===t.type?t.pageX:t.originalEvent.touches[0].pageX,!1===this.currentlyDragging&&!1===this.currentlyRotating&&(10<this.dragStartPoint-i||this.dragStartPoint-i<-10)&&(this.stopAutoRotate(),this.settings.directionControls&&this.$directionControls.css("pointer-events","none"),window.getSelection().removeAllRanges(),this.currentlyDragging=!0,this.dragStartAngle=this.currentRotationAngle),this.currentlyDragging&&(this.currentRotationAngle=this.dragStartAngle-(this.dragStartPoint-i)/this.settings.slideWidth*this.slideAngle,this.$slidesContainer.css("transform","translateX(-50%) rotate("+-this.currentRotationAngle+"deg)"),this.$slidesContainer.css("-webkit-transform","translateX(-50%) rotate("+-this.currentRotationAngle+"deg)"),this.$slidesContainer.css("-ms-transform","translateX(-50%) rotate("+-this.currentRotationAngle+"deg)")))},handleDragEnd:function(){this.readyToDrag=!1,this.currentlyDragging&&(this.currentlyDragging=!1,this.currentRotationAngle=Math.round(this.currentRotationAngle/this.slideAngle)*this.slideAngle,this.rotate(),this.settings.directionControls&&this.$directionControls.css("pointer-events",""))},handleLeftDirectionClick:function(t){t.preventDefault(),this.stopAutoRotate(),this.rotateClockwise()},handleRightDirectionClick:function(t){t.preventDefault(),this.stopAutoRotate(),this.rotateCounterClockwise()},renderSlider:function(){var e,t=this.slideAngle/2*Math.PI/180,s=1/Math.tan(t)*y/2*this.settings.meInnerRadiusCoef,i=Math.sqrt(Math.pow(s+A,2)+Math.pow(y/2,2)),n=i-(s+A),r=s-s*Math.cos(t),o=Math.sin(t)*i*2,a=n+A+r,l=i-i*Math.cos(t),d=(o-Math.sin(t)*s*2)/2;this.$slider.css("height",A+"px"),this.$slider.css("width",y+"px"),this.$slidesContainer.css("height",2*i+"px"),this.$slidesContainer.css("width",2*i+"px"),this.$slidesContainer.css("transform","translateX(-50%)"),this.$slidesContainer.css("-webkit-transform","translateX(-50%)"),this.$slidesContainer.css("-ms-transform","translateX(-50%)"),this.$slidesContainer.css("top",this.settings.meTopCoef+"px");var c,h="M 0 "+l;h+=" A "+(i+40)+" "+(i+40)+" 0 0 1 "+o+" "+l,h+=" L "+(o-d)+" "+a,h+=" A "+s+" "+s+" 0 0 0 "+d+" "+a+" Z",this.$slider[0].classList.forEach(function(t){c="rotating-slider--main"===t?"slideClipPathMe":"none"}),this.$slider.append('<svg><defs><clipPath id="'.concat(c,'"><path/></clipPath></defs></svg>')),this.$slider.find("#".concat(c,">path")).attr("d",h),t=this.slideAngle/2*Math.PI/180,s=1/Math.tan(t)*this.settings.slideWidth/2*this.settings.meInnerRadiusCoef,i=Math.sqrt(Math.pow(s+this.settings.slideHeight,2)+Math.pow(this.settings.slideWidth/2,2)),n=i-(s+this.settings.slideHeight),r=s-s*Math.cos(t),o=Math.sin(t)*i*2,a=n+this.settings.slideHeight+r,e=(o-this.settings.slideWidth)/2,l=i-i*Math.cos(t),d=(o-Math.sin(t)*s*2)/2,this.$slider.css("height",this.settings.slideHeight+"px"),this.$slider.css("width",this.settings.slideWidth+"px"),this.$slidesContainer.css("height",2*i+"px"),this.$slidesContainer.css("width",2*i+"px"),this.$slidesContainer.css("transform","translateX(-50%)"),this.$slidesContainer.css("-webkit-transform","translateX(-50%)"),this.$slidesContainer.css("-ms-transform","translateX(-50%)"),this.$slidesContainer.css("top",this.settings.meTopCoef+"px"),h="M 0 "+l,h+=" A "+(i+40)+" "+(i+40)+" 0 0 1 "+o+" "+l,h+=" L "+(o-d)+" "+a,h+=" A "+s+" "+s+" 0 0 0 "+d+" "+a+" Z",this.$slider[0].classList.forEach(function(t){c="rotating-slider--main"===t?"slideClipPath":"none"}),this.$slider.append('<svg><defs><clipPath id="'.concat(c,'"><path/></clipPath></defs></svg>')),this.$slider.find("#".concat(c,">path")).attr("d",h),this.$slides.each(function(t,i){var o=$(i);o.css("transform-origin","center "+(s+this.settings.slideHeight)+"px"),o.css("-ms-transform-origin","center "+(s+this.settings.slideHeight)+"px"),o.css("-webkit-transform-origin","center "+(s+this.settings.slideHeight)+"px"),o.css("height",this.settings.slideHeight+"px"),o.css("width",this.settings.slideWidth+"px"),o.css("padding",n*this.settings.mePaddingCoef+"px "+e*this.settings.mePaddingCoef+"px "+r*this.settings.mePaddingCoef+"px "+e*this.settings.mePaddingCoef+"px "),o.css("top",n+"px"),o.css("transform","translateX(-50%) rotate("+-this.slideAngle*t+"deg) translateY(-"+n+"px)"),o.css("-webkit-transform","translateX(-50%) rotate("+-this.slideAngle*t+"deg) translateY(-"+n+"px)"),o.css("-ms-transform","translateX(-50%) rotate("+-this.slideAngle*t+"deg) translateY(-"+n+"px)"),this.$slider[0].classList.forEach(function(t){var e,s,n,r;"rotating-slider--main"===t&&(e="polygon(",s=document.getElementById("slideClipPath").querySelector("path"),n=s.getTotalLength(),r=[],setTimeout(function(){for(var t=0;t<180;t++){var i=s.getPointAtLength(t*n/179);r.push([i.x,i.y]),e+=i.x,e+="px ",e+=i.y,e+=179!==t?"px, ":"px)"}o.css("-webkit-clip-path",e),o.css("clip-path",e)},1e3))})}.bind(this))},rotateClockwise:function(){this.currentRotationAngle=this.currentRotationAngle+this.slideAngle,this.rotate()},rotateCounterClockwise:function(){this.currentRotationAngle=this.currentRotationAngle-this.slideAngle,this.rotate()},rotate:function(){this.currentlyRotating=!0,this.rotateTimeoutId&&(clearTimeout(this.rotateTimeoutId),this.rotateTimeoutId=!1),this.$slidesContainer.css("transition","transform "+this.settings.rotationSpeed/1e3+"s ease-in-out"),this.$slidesContainer.css("transform","translateX(-50%) rotate("+-this.currentRotationAngle+"deg)"),this.$slidesContainer.css("-webkit-transform","translateX(-50%) rotate("+-this.currentRotationAngle+"deg)"),this.$slidesContainer.css("-ms-transform","translateX(-50%) rotate("+-this.currentRotationAngle+"deg)"),this.rotateTimeoutId=setTimeout(function(){this.currentlyRotating=!1,this.$slidesContainer.css("transition","none"),(360<=this.currentRotationAngle||this.currentRotationAngle<=-360)&&(this.currentRotationAngle=360<=this.currentRotationAngle?this.currentRotationAngle-360:this.currentRotationAngle+360,this.$slidesContainer.css("transform","translateX(-50%) rotate("+-this.currentRotationAngle+"deg)"),this.$slidesContainer.css("-webkit-transform","translateX(-50%) rotate("+-this.currentRotationAngle+"deg)"),this.$slidesContainer.css("-ms-transform","translateX(-50%) rotate("+-this.currentRotationAngle+"deg)"))}.bind(this),this.settings.rotationSpeed)},startAutoRotate:function(){this.autoRotateIntervalId=setInterval(function(){this.rotateCounterClockwise()}.bind(this),this.settings.autoRotateInterval)},stopAutoRotate:function(){this.autoRotateIntervalId&&(clearInterval(this.autoRotateIntervalId),this.autoRotateIntervalId=!1)},validateMarkup:function(){this.$slider.hasClass("rotating-slider")&&1===this.$slidesContainer.length&&2<=this.$slides.length?this.markupIsValid=!0:this.$slider.css("display","none")}};return this.each(function(){t.init(this)})},$(".rotating-slider--main").rotatingSlider({autoRotate:!1,autoRotateInterval:2e3,draggable:!0,directionControls:!1,directionLeftText:"&lsaquo;",directionRightText:"&rsaquo;",rotationSpeed:250,slideWidth:y,slideHeight:t,beforeRotationStart:function(){},afterRotationStart:function(){},beforeRotationEnd:function(){},afterRotationEnd:function(){}});var i=document.querySelectorAll(".slide--main"),s=document.querySelector(".circle__center-title"),n=document.querySelector(".circle__center-text"),e=document.querySelectorAll(".top__title-main-letter"),r=document.querySelectorAll(".slides__day"),o=document.querySelector(".slides");function a(){document.querySelector("body").classList.toggle("hidden")}function l(i){var e=2<arguments.length?arguments[2]:void 0;1<arguments.length&&void 0!==arguments[1]&&arguments[1]&&document.querySelectorAll(".".concat(i.classList[0],"--").concat(e)).forEach(function(t){t.classList.toggle("".concat(i.classList[0],"--").concat(e))}),Array.isArray(i)||void 0!==i.length?i.forEach(function(t){t.classList.toggle("".concat(t.classList[0],"--").concat(e))}):i.classList.toggle("".concat(i.classList[0],"--").concat(e))}function d(){var e=this;this.classList.contains("slide--choise")||document.querySelectorAll(".slide--active").forEach(function(t,i){t.classList.contains("slide--pasive")?t.addEventListener("click",c.bind(e),!1):t.addEventListener("click",function(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,i=this.closest(".rotating-slider").querySelectorAll(".rotating-slider--active .slide")[t];l(s,0,"hidden"),l(n,0,"hidden"),l(i,1,"select");var e=this;setTimeout(function(){s.innerHTML=e.closest(".rotating-slider").querySelectorAll(".rotating-slider--active .day-info__title")[t].innerHTML,l(s,0,"hidden"),n.innerHTML=e.closest(".rotating-slider").querySelectorAll(".rotating-slider--active .day-info__text")[t].innerHTML,l(n,0,"hidden")},350)}.bind(e,i),!1)})}function c(){var t=this.closest(".rotating-slider").querySelector(".rotating-slider--active .mounth-info");l(s,0,"hidden"),l(n,0,"hidden"),null!==document.querySelector(".slide--select")&&l(document.querySelector(".slide--select"),0,"select"),setTimeout(function(){s.innerHTML=t.querySelector(".mounth-info__title").innerHTML,l(s,0,"hidden"),n.innerHTML=t.querySelector(".mounth-info__text").innerHTML,l(n,0,"hidden")},350)}function h(){this.classList.add("slide--choise")}function g(){null!==document.querySelectorAll(".slide--opacity")&&l(document.querySelectorAll(".slide--opacity"),0,"opacity"),null!==document.querySelectorAll(".slide--active")&&l(document.querySelectorAll(".slide--active"),0,"active")}function u(t){var i=1<arguments.length&&void 0!==arguments[1]?arguments[1]:y,e=2<arguments.length&&void 0!==arguments[2]?arguments[2]:A,s=3<arguments.length&&void 0!==arguments[3]?arguments[3]:"slideClipPathMe",n=4<arguments.length&&void 0!==arguments[4]?arguments[4]:17;this.$slider=$(".rotating-slider--main"),this.$slidesContainer=this.$slider.children("ul.slides"),this.$slides=this.$slidesContainer.children("li"),this.slideAngle=360/this.$slides.length;var r=$(this),o=this.slideAngle/2*Math.PI/180,a=1/Math.tan(o)*e/2*1.23,l=Math.sqrt(Math.pow(a+e,2)+Math.pow(y/2,2)),d=l-(a+i),c=a-a*Math.cos(o),h=Math.sin(o)*l*2,g=(h-i)/2;Math.cos(o),Math.sin(o);this.$slider.css("height",e+"px"),this.$slider.css("width",i+"px"),r.css("height",e+"px"),r.css("width",i+"px"),r.css("padding",d+"px "+(g-n)+"px "+c+"px "+(g-n)+"px "),r.css("transform","translateX(-50%) rotate("+-this.slideAngle*t+"deg) translateY(-"+d+"px)"),r.css("-webkit-transform","translateX(-50%) rotate("+-this.slideAngle*t+"deg) translateY(-"+d+"px)"),r.css("-ms-transform","translateX(-50%) rotate("+-this.slideAngle*t+"deg) translateY(-"+d+"px)");for(var u="polygon(",f=document.getElementById(s).querySelector("path"),p=f.getTotalLength(),m=[],v=0;v<180;v++){var w=f.getPointAtLength(v*p/179);m.push([w.x,w.y]),u+=w.x,u+="px ",u+=w.y,console.log(v),u+=179!==v?"px, ":"px)"}r.css("-webkit-clip-path",u),r.css("clip-path",u)}o.addEventListener("touchstart",a,!1),o.addEventListener("touchend",a,!1),r.forEach(function(t){t.addEventListener("click",function(){console.log("tut")})}),i.forEach(function(t,i){950<window.innerWidth&&t.addEventListener("mouseenter",u.bind(t,i,void 0,void 0,void 0,void 0),!1),950<window.innerWidth&&t.addEventListener("mouseleave",u.bind(t,i,120,120,"slideClipPath",0),!1),t.addEventListener("click",g,!1);var e,s=2.07,n=26,r=110;window.innerWidth<=950&&(s=2.23,n=20,r=85),window.innerWidth<=700&&(s=1.8,n=15,r=73),window.innerWidth<=414&&(s=1.9,n=13,r=39),t.closest(".rotating-slider").querySelectorAll(".rotating-slider")[i].classList.contains("rotating-slider__junuary")&&(e=".rotating-slider__junuary"),t.closest(".rotating-slider").querySelectorAll(".rotating-slider")[i].classList.contains("rotating-slider__february")&&(e=".rotating-slider__february",950<window.innerWidth&&(s=2.3),window.innerWidth<=950&&(s=2.5),window.innerWidth<=700&&(s=2),window.innerWidth<=414&&(s=2.13)),t.closest(".rotating-slider").querySelectorAll(".rotating-slider")[i].classList.contains("rotating-slider__march")&&(e=".rotating-slider__march"),t.closest(".rotating-slider").querySelectorAll(".rotating-slider")[i].classList.contains("rotating-slider__april")&&(e=".rotating-slider__april",950<window.innerWidth&&(s=2.13),window.innerWidth<=950&&(s=2.33),window.innerWidth<=700&&(s=1.85),window.innerWidth<=414&&(s=1.96)),t.closest(".rotating-slider").querySelectorAll(".rotating-slider")[i].classList.contains("rotating-slider__may")&&(e=".rotating-slider__may"),t.closest(".rotating-slider").querySelectorAll(".rotating-slider")[i].classList.contains("rotating-slider__june")&&(e=".rotating-slider__june",950<window.innerWidth&&(s=2.13),window.innerWidth<=950&&(s=2.33),window.innerWidth<=700&&(s=1.85),window.innerWidth<=414&&(s=1.96)),t.closest(".rotating-slider").querySelectorAll(".rotating-slider")[i].classList.contains("rotating-slider__july")&&(e=".rotating-slider__july"),t.closest(".rotating-slider").querySelectorAll(".rotating-slider")[i].classList.contains("rotating-slider__august")&&(e=".rotating-slider__august"),t.closest(".rotating-slider").querySelectorAll(".rotating-slider")[i].classList.contains("rotating-slider__september")&&(e=".rotating-slider__september",950<window.innerWidth&&(s=2.13),window.innerWidth<=950&&(s=2.33),window.innerWidth<=700&&(s=1.85),window.innerWidth<=414&&(s=1.96)),t.closest(".rotating-slider").querySelectorAll(".rotating-slider")[i].classList.contains("rotating-slider__october")&&(e=".rotating-slider__october"),t.closest(".rotating-slider").querySelectorAll(".rotating-slider")[i].classList.contains("rotating-slider__november")&&(e=".rotating-slider__november",950<window.innerWidth&&(s=2.13),window.innerWidth<=950&&(s=2.33),window.innerWidth<=700&&(s=1.85),window.innerWidth<=414&&(s=1.96)),t.closest(".rotating-slider").querySelectorAll(".rotating-slider")[i].classList.contains("rotating-slider__december")&&(e=".rotating-slider__december"),t.addEventListener("click",l.bind(null,document.querySelector(e),!0,"active"),!1),t.addEventListener("click",function(t,i,e,s,n,r,o,a,l,d,c,h,g){$(t).rotatingSlider({autoRotate:i,autoRotateInterval:e,draggable:s,directionControls:n,directionLeftText:r,directionRightText:o,rotationSpeed:a,slideWidth:l,slideHeight:d,meTopCoef:c,meInnerRadiusCoef:h,mePaddingCoef:g,beforeRotationStart:function(){},afterRotationStart:function(){},beforeRotationEnd:function(){},afterRotationEnd:function(){}})}.bind(null,e,!1,2e3,!0,!1,"&lsaquo;","&rsaquo;",250,n,n,r,s,0),!1),t.addEventListener("click",l.bind(null,document.querySelector(e).querySelectorAll(".slide--day"),0,"active"),!1),t.addEventListener("click",d,!1),t.addEventListener("click",c,!1),t.addEventListener("click",h,!1),t.addEventListener("click",function(t){setTimeout(function(){l(document.querySelector(t).querySelectorAll(".slide--day"),0,"opacity")},100)}.bind(null,e),!1)}),setInterval(function(){l(e,0,"hidden")},2e3)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
